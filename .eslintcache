[{"/Users/Frank1/development/personal_projects/bill_splitter/src/index.js":"1","/Users/Frank1/development/personal_projects/bill_splitter/src/Containers/Routes/index.js":"2","/Users/Frank1/development/personal_projects/bill_splitter/src/Components/Home/Home.jsx":"3","/Users/Frank1/development/personal_projects/bill_splitter/src/Containers/Routes/Routes.jsx":"4","/Users/Frank1/development/personal_projects/bill_splitter/src/Components/Home/index.js":"5","/Users/Frank1/development/personal_projects/bill_splitter/src/firebase.js":"6"},{"size":500,"mtime":1611139562165,"results":"7","hashOfConfig":"8"},{"size":55,"mtime":1611139740263,"results":"9","hashOfConfig":"8"},{"size":6770,"mtime":1611250693417,"results":"10","hashOfConfig":"8"},{"size":292,"mtime":1611140015087,"results":"11","hashOfConfig":"8"},{"size":49,"mtime":1611139664303,"results":"12","hashOfConfig":"8"},{"size":389,"mtime":1611250687451,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1ak27p",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Frank1/development/personal_projects/bill_splitter/src/index.js",[],["29","30"],"/Users/Frank1/development/personal_projects/bill_splitter/src/Containers/Routes/index.js",[],"/Users/Frank1/development/personal_projects/bill_splitter/src/Components/Home/Home.jsx",["31","32","33","34","35","36","37","38","39","40","41","42","43"],"import styles from \"./Home.module.scss\";\nimport React, {useState, useEffect} from 'react'\nimport 'semantic-ui-css/semantic.min.css'\n// import firebase, {provider} from \"../../firebase\"\n\nimport { Button, \n  Progress,\n  Form,\n  Grid,\n  Segment,\n  Header, \n  Modal,\n  Divider,\n  Input,\n  Item,\n  Label,\n  Container,\n  Message,\nIcon,\nCheckbox,\nDropdown,\nPopup,\nGridRow\n} from 'semantic-ui-react'\n\nconst Home = () => {\n  const [open, setOpen] = useState(false);\n  const [percentage, setPercentage] = useState(5);\n  const [amount, setAmount] = useState(0);\n  const [people, setPeople] = useState(0);\n  const [showBill, setShowBill] = useState(0);\n  const [defaultCurrency, setDefaultCurrency] = useState('£')\n  const [user, setUser] = useState(false);\n  let number = Array.from(Array(20).keys())\n  useEffect(() => {\n    setPeople()\n    console.log(people);\n    \n  }, [])\n  useEffect(() => {\n    setAmount()\n    console.log(amount);\n  }, [])\n  useEffect(() => {\n    setShowBill()\n    console.log(showBill);\n  }, [])\n  useEffect(() => {\n    setDefaultCurrency('£');\n  }, [])\n\n  const increasePercentageTip = () => {\n    setPercentage(count => count + 1);\n  }\n  const decreasePercentageTip = () => {\n    if (percentage !== 0)\n    setPercentage(count => count - 1);\n  }\n\n\n  \n  \n\n  const caculateBill = (bill, tip) => {\n      const numberOfPeople = parseInt(people.target.value)\n      const billAndTipTotal =  parseInt(amount.target.value) + parseInt(amount.target.value) * percentage/100;\n      return setShowBill(billAndTipTotal / parseInt(people.target.value).toFixed(2))\n    }\n    const caculateEntireBill = (bill, tip) => {\n      const numberOfPeople = parseInt(people.target.value)\n      const billAndTipTotal =  parseInt(amount.target.value) + parseInt(amount.target.value) * percentage/100;\n      return setShowBill(billAndTipTotal.toFixed(2))\n    }\n\n\n  \n  \n\n\n  return (\n    <div className = {styles.homeContainer}>\n       \n      <Container  textAlign='left' className = {styles.container} >\n      <Segment size='small' clearing>\n        <Button disabled floated='right' icon>\n          <Icon name='sign in' />\n        </Button>\n          <Header  as='h2' textAlign='center' color='green' floated='left'>\n            Share My Tip\n          </Header>\n        </Segment>\n        <Segment placeholder>\n              <Grid.Column stretched='true' stackable = 'false'>\n              <Input size='large' type='number' placeholder='Number of people...'  onChange= {setPeople}/>\n              \n              <datalist id='Number'>\n                {number.map((item) => {\n                  return <option value={item}>{Item}</option>\n                })}\n              </datalist>\n              <Divider></Divider>\n              <Input  size='large' labelPosition='right' type='number' placeholder='Total bill amount...' onChange= {setAmount}>\n              <Label basic>{defaultCurrency}</Label>\n              <input />\n              <Label></Label>\n              </Input>\n              <Divider></Divider>\n              <Button.Group>\n              <Button onClick = {decreasePercentageTip} >Decrease Tip</Button>\n              <Button.Or />\n              <Button onClick = {increasePercentageTip} positive>Increase Tip</Button>\n              </Button.Group>\n              <Divider></Divider>\n            \n                <Progress size = {'large'} font progress = {`value${'%'}`} className={styles.progressBar} percent={percentage} indicating />\n              </Grid.Column>\n              <Divider></Divider>\n\n\n              <Grid.Column>\n              {/* <Grid centered padded columns={2}>\n                <Grid.Column textAlign='left'>\n                <Header  as='h4'>Calculate Bill and Tip </Header>\n                </Grid.Column>\n                <Grid.Column relaxed textAlign='right'>\n                <Popup size='tiny' position='top left' on='focus' flowing content='Output =  individual total bill and tip' trigger={<Button compact size='tiny' icon='question' />} />\n                </Grid.Column>\n              </Grid>\n               */}\n            \n   \n\n\n                <Button.Group  size='huge'>\n                <Button disabled={people === undefined || amount === undefined || people === 0 || amount === 0 ? true : false} color = 'instagram' onClick={() => caculateBill()} >Calculate</Button>\n                    <Modal\n                    size = 'tiny'\n                    onClose={() => setOpen(false)}\n                    onOpen={() => setOpen(true)}\n                    open={open}\n                    trigger={<Button><Icon name = 'setting'></Icon> Settings</Button>}\n                    >\n                    <Modal.Header>Settings</Modal.Header>\n                    <Modal.Content>\n                      <Modal.Description>\n                      <Dropdown\n                          text='Currency'\n                          icon='money'\n                          floating\n                          labeled\n                          button\n                          className='icon'\n                        >\n                          <Dropdown.Menu>\n                            <Dropdown.Header icon='tags' content='Choose Currency' />\n                            <Dropdown.Divider />\n                            <Dropdown.Item onClick  = {() => setDefaultCurrency('£')}\n                              label='£'\n                              text='Sterling'\n                            />\n                            <Dropdown.Item onClick  = {() => setDefaultCurrency('€')}\n                              label='€'\n                              text='Euro'\n                            />\n                            <Dropdown.Item onClick  = {() => setDefaultCurrency('$')}\n                              label='$'\n                              text='Dollar'\n                            />\n                          </Dropdown.Menu>\n                        </Dropdown>\n                      </Modal.Description>\n                    </Modal.Content>\n                    <Modal.Actions>\n                      <Button\n                        content=\"Confirm\"\n                        labelPosition='right'\n                        icon='checkmark'\n                        onClick={() => setOpen(false)}\n                        positive\n                      />\n                    </Modal.Actions>\n                  </Modal>\n                  {/* <Popup size='tiny' position='top left' on='focus' flowing content='Output =  individual total bill and tip' trigger={<Button color='green' compact size='tiny' icon='question'/>} /> */}\n\n              </Button.Group>\n              <Message >{`${showBill == undefined ? 0 : showBill}`}</Message>\n            </Grid.Column>\n          </Segment>\n          </Container>\n    </div>\n  );\n};\n\n\n\nexport default Home;\n","/Users/Frank1/development/personal_projects/bill_splitter/src/Containers/Routes/Routes.jsx",["44"],"import React from \"react\";\nimport styles from \"./Routes.module.scss\";\nimport { Router } from \"@reach/router\";\nimport Home from \"../../Components/Home\";\n\nconst Routes = () => {\n  return (\n    <>\n      <Router>\n        <Home path = \"/\"/>\n      </Router>\n    </>\n  );\n};\n\nexport default Routes;\n","/Users/Frank1/development/personal_projects/bill_splitter/src/Components/Home/index.js",[],"/Users/Frank1/development/personal_projects/bill_splitter/src/firebase.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":8,"column":3,"nodeType":"51","messageId":"52","endLine":8,"endColumn":7},{"ruleId":"49","severity":1,"message":"53","line":20,"column":1,"nodeType":"51","messageId":"52","endLine":20,"endColumn":9},{"ruleId":"49","severity":1,"message":"54","line":22,"column":1,"nodeType":"51","messageId":"52","endLine":22,"endColumn":6},{"ruleId":"49","severity":1,"message":"55","line":23,"column":1,"nodeType":"51","messageId":"52","endLine":23,"endColumn":8},{"ruleId":"49","severity":1,"message":"56","line":33,"column":10,"nodeType":"51","messageId":"52","endLine":33,"endColumn":14},{"ruleId":"49","severity":1,"message":"57","line":33,"column":16,"nodeType":"51","messageId":"52","endLine":33,"endColumn":23},{"ruleId":"58","severity":1,"message":"59","line":39,"column":6,"nodeType":"60","endLine":39,"endColumn":8,"suggestions":"61"},{"ruleId":"58","severity":1,"message":"62","line":43,"column":6,"nodeType":"60","endLine":43,"endColumn":8,"suggestions":"63"},{"ruleId":"58","severity":1,"message":"64","line":47,"column":6,"nodeType":"60","endLine":47,"endColumn":8,"suggestions":"65"},{"ruleId":"49","severity":1,"message":"66","line":65,"column":13,"nodeType":"51","messageId":"52","endLine":65,"endColumn":27},{"ruleId":"49","severity":1,"message":"67","line":69,"column":11,"nodeType":"51","messageId":"52","endLine":69,"endColumn":29},{"ruleId":"49","severity":1,"message":"66","line":70,"column":13,"nodeType":"51","messageId":"52","endLine":70,"endColumn":27},{"ruleId":"68","severity":1,"message":"69","line":186,"column":38,"nodeType":"70","messageId":"71","endLine":186,"endColumn":40},{"ruleId":"49","severity":1,"message":"72","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":14},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'Popup' is defined but never used.","'GridRow' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'people'. Either include it or remove the dependency array.","ArrayExpression",["75"],"React Hook useEffect has a missing dependency: 'amount'. Either include it or remove the dependency array.",["76"],"React Hook useEffect has a missing dependency: 'showBill'. Either include it or remove the dependency array.",["77"],"'numberOfPeople' is assigned a value but never used.","'caculateEntireBill' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'styles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [people]",{"range":"84","text":"85"},"Update the dependencies array to be: [amount]",{"range":"86","text":"87"},"Update the dependencies array to be: [showBill]",{"range":"88","text":"89"},[861,863],"[people]",[931,933],"[amount]",[1005,1007],"[showBill]"]